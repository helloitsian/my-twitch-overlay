{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/url-pattern/lib/url-pattern.js","../../node_modules/svelte-hash-router/src/utils/routes.js","../../node_modules/svelte-hash-router/src/utils/path.js","../../node_modules/svelte-hash-router/src/utils/match.js","../../node_modules/svelte-hash-router/src/components/Router.svelte","../../src/App.svelte","../../src/components/Camera.svelte","../../src/components/Chat.svelte","../../src/components/Socials.svelte","../../src/pages/Home.svelte","../../src/pages/Webcam.svelte","../../src/pages/Brb.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// Generated by CoffeeScript 1.10.0\nvar slice = [].slice;\n\n(function(root, factory) {\n  if (('function' === typeof define) && (define.amd != null)) {\n    return define([], factory);\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    return module.exports = factory();\n  } else {\n    return root.UrlPattern = factory();\n  }\n})(this, function() {\n  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;\n  escapeForRegex = function(string) {\n    return string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  concatMap = function(array, f) {\n    var i, length, results;\n    results = [];\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      results = results.concat(f(array[i]));\n    }\n    return results;\n  };\n  stringConcatMap = function(array, f) {\n    var i, length, result;\n    result = '';\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      result += f(array[i]);\n    }\n    return result;\n  };\n  regexGroupCount = function(regex) {\n    return (new RegExp(regex.toString() + '|')).exec('').length - 1;\n  };\n  keysAndValuesToObject = function(keys, values) {\n    var i, key, length, object, value;\n    object = {};\n    i = -1;\n    length = keys.length;\n    while (++i < length) {\n      key = keys[i];\n      value = values[i];\n      if (value == null) {\n        continue;\n      }\n      if (object[key] != null) {\n        if (!Array.isArray(object[key])) {\n          object[key] = [object[key]];\n        }\n        object[key].push(value);\n      } else {\n        object[key] = value;\n      }\n    }\n    return object;\n  };\n  P = {};\n  P.Result = function(value, rest) {\n    this.value = value;\n    this.rest = rest;\n  };\n  P.Tagged = function(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  };\n  P.tag = function(tag, parser) {\n    return function(input) {\n      var result, tagged;\n      result = parser(input);\n      if (result == null) {\n        return;\n      }\n      tagged = new P.Tagged(tag, result.value);\n      return new P.Result(tagged, result.rest);\n    };\n  };\n  P.regex = function(regex) {\n    return function(input) {\n      var matches, result;\n      matches = regex.exec(input);\n      if (matches == null) {\n        return;\n      }\n      result = matches[0];\n      return new P.Result(result, input.slice(result.length));\n    };\n  };\n  P.sequence = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, rest, result, values;\n      i = -1;\n      length = parsers.length;\n      values = [];\n      rest = input;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(rest);\n        if (result == null) {\n          return;\n        }\n        values.push(result.value);\n        rest = result.rest;\n      }\n      return new P.Result(values, rest);\n    };\n  };\n  P.pick = function() {\n    var indexes, parsers;\n    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return function(input) {\n      var array, result;\n      result = P.sequence.apply(P, parsers)(input);\n      if (result == null) {\n        return;\n      }\n      array = result.value;\n      result.value = array[indexes];\n      return result;\n    };\n  };\n  P.string = function(string) {\n    var length;\n    length = string.length;\n    return function(input) {\n      if (input.slice(0, length) === string) {\n        return new P.Result(string, input.slice(length));\n      }\n    };\n  };\n  P.lazy = function(fn) {\n    var cached;\n    cached = null;\n    return function(input) {\n      if (cached == null) {\n        cached = fn();\n      }\n      return cached(input);\n    };\n  };\n  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {\n    var endResult, parserResult, rest, results;\n    rest = input;\n    results = stringResult ? '' : [];\n    while (true) {\n      if (end != null) {\n        endResult = end(rest);\n        if (endResult != null) {\n          break;\n        }\n      }\n      parserResult = parser(rest);\n      if (parserResult == null) {\n        break;\n      }\n      if (stringResult) {\n        results += parserResult.value;\n      } else {\n        results.push(parserResult.value);\n      }\n      rest = parserResult.rest;\n    }\n    if (atLeastOneResultRequired && results.length === 0) {\n      return;\n    }\n    return new P.Result(results, rest);\n  };\n  P.many1 = function(parser) {\n    return function(input) {\n      return P.baseMany(parser, null, false, true, input);\n    };\n  };\n  P.concatMany1Till = function(parser, end) {\n    return function(input) {\n      return P.baseMany(parser, end, true, true, input);\n    };\n  };\n  P.firstChoice = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, result;\n      i = -1;\n      length = parsers.length;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(input);\n        if (result != null) {\n          return result;\n        }\n      }\n    };\n  };\n  newParser = function(options) {\n    var U;\n    U = {};\n    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));\n    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {\n      return U.pattern;\n    }), P.string(options.optionalSegmentEndChar)));\n    U.name = P.regex(new RegExp(\"^[\" + options.segmentNameCharset + \"]+\"));\n    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {\n      return U.name;\n    })));\n    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));\n    U[\"static\"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {\n      return U.escapedChar;\n    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));\n    U.token = P.lazy(function() {\n      return P.firstChoice(U.wildcard, U.optional, U.named, U[\"static\"]);\n    });\n    U.pattern = P.many1(P.lazy(function() {\n      return U.token;\n    }));\n    return U;\n  };\n  defaultOptions = {\n    escapeChar: '\\\\',\n    segmentNameStartChar: ':',\n    segmentValueCharset: 'a-zA-Z0-9-_~ %',\n    segmentNameCharset: 'a-zA-Z0-9',\n    optionalSegmentStartChar: '(',\n    optionalSegmentEndChar: ')',\n    wildcardChar: '*'\n  };\n  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return baseAstNodeToRegexString(node, segmentValueCharset);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return '(.*?)';\n      case 'named':\n        return \"([\" + segmentValueCharset + \"]+)\";\n      case 'static':\n        return escapeForRegex(astNode.value);\n      case 'optional':\n        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';\n    }\n  };\n  astNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (segmentValueCharset == null) {\n      segmentValueCharset = defaultOptions.segmentValueCharset;\n    }\n    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';\n  };\n  astNodeToNames = function(astNode) {\n    if (Array.isArray(astNode)) {\n      return concatMap(astNode, astNodeToNames);\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return ['_'];\n      case 'named':\n        return [astNode.value];\n      case 'static':\n        return [];\n      case 'optional':\n        return astNodeToNames(astNode.value);\n    }\n  };\n  getParam = function(params, key, nextIndexes, sideEffects) {\n    var index, maxIndex, result, value;\n    if (sideEffects == null) {\n      sideEffects = false;\n    }\n    value = params[key];\n    if (value == null) {\n      if (sideEffects) {\n        throw new Error(\"no values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    index = nextIndexes[key] || 0;\n    maxIndex = Array.isArray(value) ? value.length - 1 : 0;\n    if (index > maxIndex) {\n      if (sideEffects) {\n        throw new Error(\"too few values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    result = Array.isArray(value) ? value[index] : value;\n    if (sideEffects) {\n      nextIndexes[key] = index + 1;\n    }\n    return result;\n  };\n  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {\n    var i, length;\n    if (Array.isArray(astNode)) {\n      i = -1;\n      length = astNode.length;\n      while (++i < length) {\n        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, false) != null;\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, false) != null;\n      case 'static':\n        return false;\n      case 'optional':\n        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);\n    }\n  };\n  stringify = function(astNode, params, nextIndexes) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return stringify(node, params, nextIndexes);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, true);\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, true);\n      case 'static':\n        return astNode.value;\n      case 'optional':\n        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {\n          return stringify(astNode.value, params, nextIndexes);\n        } else {\n          return '';\n        }\n    }\n  };\n  UrlPattern = function(arg1, arg2) {\n    var groupCount, options, parsed, parser, withoutWhitespace;\n    if (arg1 instanceof UrlPattern) {\n      this.isRegex = arg1.isRegex;\n      this.regex = arg1.regex;\n      this.ast = arg1.ast;\n      this.names = arg1.names;\n      return;\n    }\n    this.isRegex = arg1 instanceof RegExp;\n    if (!(('string' === typeof arg1) || this.isRegex)) {\n      throw new TypeError('argument must be a regex or a string');\n    }\n    if (this.isRegex) {\n      this.regex = arg1;\n      if (arg2 != null) {\n        if (!Array.isArray(arg2)) {\n          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');\n        }\n        groupCount = regexGroupCount(this.regex);\n        if (arg2.length !== groupCount) {\n          throw new Error(\"regex contains \" + groupCount + \" groups but array of group names contains \" + arg2.length);\n        }\n        this.names = arg2;\n      }\n      return;\n    }\n    if (arg1 === '') {\n      throw new Error('argument must not be the empty string');\n    }\n    withoutWhitespace = arg1.replace(/\\s+/g, '');\n    if (withoutWhitespace !== arg1) {\n      throw new Error('argument must not contain whitespace');\n    }\n    options = {\n      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,\n      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,\n      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,\n      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,\n      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,\n      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,\n      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar\n    };\n    parser = newParser(options);\n    parsed = parser.pattern(arg1);\n    if (parsed == null) {\n      throw new Error(\"couldn't parse pattern\");\n    }\n    if (parsed.rest !== '') {\n      throw new Error(\"could only partially parse pattern\");\n    }\n    this.ast = parsed.value;\n    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));\n    this.names = astNodeToNames(this.ast);\n  };\n  UrlPattern.prototype.match = function(url) {\n    var groups, match;\n    match = this.regex.exec(url);\n    if (match == null) {\n      return null;\n    }\n    groups = match.slice(1);\n    if (this.names) {\n      return keysAndValuesToObject(this.names, groups);\n    } else {\n      return groups;\n    }\n  };\n  UrlPattern.prototype.stringify = function(params) {\n    if (params == null) {\n      params = {};\n    }\n    if (this.isRegex) {\n      throw new Error(\"can't stringify patterns generated from a regex\");\n    }\n    if (params !== Object(params)) {\n      throw new Error(\"argument must be an object or undefined\");\n    }\n    return stringify(this.ast, params, {});\n  };\n  UrlPattern.escapeForRegex = escapeForRegex;\n  UrlPattern.concatMap = concatMap;\n  UrlPattern.stringConcatMap = stringConcatMap;\n  UrlPattern.regexGroupCount = regexGroupCount;\n  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;\n  UrlPattern.P = P;\n  UrlPattern.newParser = newParser;\n  UrlPattern.defaultOptions = defaultOptions;\n  UrlPattern.astNodeToRegexString = astNodeToRegexString;\n  UrlPattern.astNodeToNames = astNodeToNames;\n  UrlPattern.getParam = getParam;\n  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;\n  UrlPattern.stringify = stringify;\n  return UrlPattern;\n});\n","import UrlPattern from 'url-pattern'\r\nimport { writable, derived } from 'svelte/store'\r\n\r\nfunction defineProp (obj, prop, value) {\r\n  Object.defineProperty(obj, prop, { value })\r\n}\r\n\r\n// Parse schema into routes\r\nfunction parse (schema = {}, notRoot, pathname, href = '#') {\r\n  // Convert schema to options object. Schema can be:\r\n  // + function: Svelte component\r\n  // + string: redirect path\r\n  // + object: options\r\n  if (notRoot) {\r\n    let type = typeof schema\r\n    schema = type === 'function' ? { $$component: schema }\r\n      : type === 'string' ? { $$redirect: schema }\r\n      : (type !== 'object' || schema === null) ? {} : schema\r\n\r\n    let c = schema.$$component\r\n    if (typeof c !== 'function' && c !== undefined && c !== null)\r\n      throw new Error('Invalid Svelte component')\r\n  }\r\n\r\n  // Any properties not starting with $$ will be treated as routes,\r\n  // the rest will be kept as route data. Custom data is also kept,\r\n  // but will be replaced with internal data if duplicating names.\r\n  let route = {}\r\n  for (let i in schema) {\r\n    if (/^\\$\\$/.test(i))\r\n      defineProp(route, i, schema[i])\r\n    else\r\n      route[i] = parse(schema[i], true, i, href + i)\r\n  }\r\n\r\n  // Define internal data\r\n  if (notRoot) {\r\n    defineProp(route, '$$href', href) // full path including #\r\n    defineProp(route, '$$pathname', pathname) // scoped path\r\n    defineProp(route, '$$pattern', new UrlPattern(href))\r\n    defineProp(route, '$$stringify', v => route.$$pattern.stringify(v))\r\n  }\r\n\r\n  return Object.freeze(route)\r\n}\r\n\r\n// Routes store must be set before creating any Svelte components.\r\n// It can only be set once. A parsed version is created after with\r\n// helpful internal data\r\nlet schema = writable()\r\nlet routes = derived(schema, $ => parse($))\r\nroutes.set = v => {\r\n  schema.set(v)\r\n  delete routes.set\r\n}\r\n\r\nexport { routes }\r\n","import { readable, derived } from 'svelte/store'\r\n\r\nlet regex = /(#?[^?]*)?(\\?.*)?/\r\n\r\nfunction parse () {\r\n  let match = regex.exec(window.location.hash)\r\n  let pathname = match[1] || '#/'\r\n  let querystring = match[2]\r\n  return { pathname, querystring }\r\n}\r\n\r\nlet path = readable(parse(), set => {\r\n  let update = () => set(parse())\r\n  window.addEventListener('hashchange', update)\r\n  return () => window.removeEventListener('hashchange', update)\r\n})\r\n\r\nlet pathname = derived(path, $ => $.pathname) // current pathname without query\r\nlet querystring = derived(path, $ => $.querystring)\r\nlet query = derived(querystring, $ => {\r\n  return Array.from(new URLSearchParams($))\r\n    .reduce((a, [i, e]) => { a[i] = e; return a }, {})\r\n})\r\n\r\nexport { pathname, query }\r\n","import { tick } from 'svelte'\r\nimport { derived } from 'svelte/store'\r\nimport { routes } from './routes'\r\nimport { pathname } from './path'\r\n\r\n// Search for matching route\r\nfunction parse (active, pathname, notRoot, matches = []) {\r\n  if (notRoot) {\r\n    let params = active.$$pattern.match(pathname)\r\n    if (params) {\r\n      return !active.$$redirect\r\n        ? { active, params, matches }\r\n        // redirect\r\n        : tick().then(() => {\r\n          history.replaceState(null, null, '#' + active.$$redirect)\r\n          window.dispatchEvent(new Event('hashchange'))\r\n        })\r\n    }\r\n  }\r\n\r\n  for (let e of Object.values(active)) {\r\n    let result = parse(e, pathname, true, [...matches, e])\r\n    if (result) return result\r\n  }\r\n}\r\n\r\nlet match = derived([routes, pathname], ([$r, $p]) => parse($r, $p) || {})\r\nlet active = derived(match, $ => $.active || {}) // current active route\r\nlet params = derived(match, $ => $.params || {})\r\nlet matches = derived(match, $ => $.matches || []) // parents of active route and itself\r\nlet components = derived(matches, $ => $.map(e => e.$$component).filter(e => e))// components to use in <Router/>\r\n\r\nexport { active, params, matches, components }\r\n","<script context='module'>\r\nlet level = 0\r\n</script>\r\n\r\n<script>\r\nimport { onDestroy } from 'svelte'\r\nimport { components } from '../utils/match'\r\n\r\nlet i = level++\r\nonDestroy(() => level--)\r\n</script>\r\n\r\n<svelte:component this={$components[i]} {...$$props}/>\r\n","<script>\n  import Router from 'svelte-hash-router'\n</script>\n\n<main class=\"App\">\n  <Router/>\n</main>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap');\n\n  :global(*) {\n    font-family: 'Fira Code', monospace;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  :global(html), :global(body) {\n    margin: 0;\n    padding: 0;\n  }\n</style>","<script>\r\n</script>\r\n\r\n<div class=\"Camera__camera\">\r\n  <div class=\"Camera__shadow\"></div>\r\n  <div class=\"Camera__border\"></div>\r\n  <div class=\"Camera__section\"></div>\r\n  <div class=\"Camera__details\">\r\n    <div class=\"Camera__details-title\">\r\n      <h3>StreamingLotus</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  @keyframes glowingMovingGradient {\r\n    0% {\r\n\t\t  filter: blur(.3rem);\r\n      background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      filter: blur(.5rem);\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      filter: blur(.7rem);\r\n      background-position: 0% 50%;\r\n    }\r\n  }\r\n\r\n  @keyframes movingGradient {\r\n    0% {\r\n\t\t  background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      background-position: 0% 50%;\r\n    }\r\n  }\r\n\r\n  .Camera__shadow {\r\n    position: absolute;\r\n    top: var(--top, 20px);\r\n    left: calc(var(--left, 1) - 5px);\r\n    right: calc(var(--right, 1) - 5px);\r\n    width: calc(var(--width, 569px) + 6px);\r\n    height: calc(var(--height, 569px) + 6px);\r\n    z-index: 2;\r\n    border-radius: 25px;\r\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n    background-size: 200% 200%;\r\n    filter: blur(.3rem);\r\n    animation: glowingMovingGradient 10s ease infinite alternate-reverse;\r\n  }\r\n\r\n  .Camera__border {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: var(--left, 1);\r\n    right: var(--right, 1);\r\n    width: var(--width, 569px);\r\n    height: var(--height, 330px);\r\n    z-index: 2;\r\n    border-radius: 25px;\r\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n    background-size: 200% 200%;\r\n    background-position: 0% 0%;\r\n    animation: movingGradient 10s ease infinite alternate-reverse;\r\n  }\r\n\r\n  .Camera__section {\r\n    position: absolute;\r\n    background: #04ff00ff;\r\n    top: calc(var(--top, 20px) + 12px);\r\n    left: calc(var(--left, 1) + 11px);\r\n    right: calc(var(--right, 1) + 11px);\r\n    width: calc(var(--width, 569px) - 24px);\r\n    height: calc(var(--height, 330px) - 24px);\r\n    z-index: 3;\r\n    border-radius: 20px;\r\n  }\r\n\r\n  .Camera__details {\r\n    position: absolute;\r\n    top: calc(var(--height, 330px));\r\n    left: calc(var(--left, 1));\r\n    right: calc(var(--right, 1));\r\n    width: calc(var(--width, 569px));\r\n    text-align: center;\r\n    z-index: 3;\r\n  }\r\n\r\n  .Camera__details-title {\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    margin: 0;\r\n  }\r\n</style>","<script>\r\n</script>\r\n\r\n<div class=\"Chat\" style=\"\">\r\n  <div class=\"Chat__title\">\r\n    Chat\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .Chat {\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    width: var(--width, 566px);\r\n    height: var(--height, 650px);\r\n    bottom: var(--bottom, 20px);\r\n    right: var(--right, 20px);\r\n    border-radius: 25px;\r\n    background: rgb(0, 0, 0, .3);\r\n    filter: drop-shadow(0 0 .5rem rgb(0, 0, 0, .3));\r\n  }\r\n\r\n  .Chat__title {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    color: white;\r\n  }\r\n</style>","<script>\r\n\r\n</script>\r\n\r\n<div class=\"Socials\">\r\n  <div class=\"Socials__links\">\r\n    <div class=\"Socials__link\">\r\n      <div class=\"Socials__link-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-github\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg>\r\n      </div>\r\n      <span class=\"Socials__link-text\">/helloitsian</span>\r\n    </div>\r\n    <div class=\"Socials__link\">\r\n      <div class=\"Socials__link-icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/></svg>\r\n      </div>\r\n      <span class=\"Socials__link-text\">@lotsofcoding</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .Socials {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .Socials__links {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .Socials__link {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  .Socials__link-text {\r\n    color: white;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .Socials__link-icon {\r\n    margin-right: 10px;\r\n    color: white;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n</style>","<script>\r\n  import Camera from '../components/Camera.svelte'\r\n  import Chat from '../components/Chat.svelte'\r\n  import Socials from '../components/Socials.svelte'\r\n</script>\r\n\r\n<main class=\"Home\">\r\n  <Camera --top={\"20px\"} --right={\"20px\"} --width={\"569px\"} --height={\"330px\"}/>\r\n  <Chat --width={\"566px\"} --height={\"650px\"} --bottom={\"20px\"} --right={\"20px\"} />\r\n  <Socials />\r\n</main>\r\n\r\n<style></style>","<script>\r\n  import Socials from '../components/Socials.svelte'\r\n  import Camera from '../components/Camera.svelte';\r\n  import Chat from '../components/Chat.svelte';\r\n</script>\r\n\r\n<main class=\"Webcam\">\r\n  <div class=\"Webcam__cam-chat-wrapper\">\r\n    <Camera --top={\"20px\"} --left={\"20px\"} --width={\"1300px\"} --height={\"731px\"}/>\r\n    <Chat --width={\"566px\"} --height={\"1040px\"} --bottom={\"20px\"} --right={\"20px\"} />\r\n  </div>\r\n  <Socials />\r\n</main>\r\n\r\n<style>\r\n  .Webcam {\r\n    background: url('https://w.wallhaven.cc/full/3z/wallhaven-3zgyzv.png');\r\n    height: 100vh;\r\n  }\r\n</style>","<script>\r\n  import Socials from '../components/Socials.svelte'\r\n</script>\r\n\r\n<main class=\"Brb\">\r\n  <div class=\"Brb-wrapper\">\r\n  <span class=\"Brb__title gradient-text\">\r\n    Brb...\r\n  </span>\r\n</div>\r\n<Socials />\r\n</main>\r\n\r\n<style>\r\n   @keyframes movingGradient {\r\n    0% {\r\n\t\t  background-position: 0% 50%;\r\n    }\r\n    50% {\r\n      background-position: 100% 50%;\r\n    }\r\n    100% {\r\n      background-position: 0% 50%;\r\n    }\r\n  }\r\n\r\n  .gradient-text {\r\n    color: transparent;\r\n    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n    -webkit-background-clip: text;\r\n    background-size: 200% 200%;\r\n    background-clip: text;\r\n    animation: movingGradient 10s ease infinite alternate;\r\n  }\r\n\r\n  .Brb {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: black;\r\n  }\r\n\r\n  .Brb__title {\r\n    margin: 0;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    font-size: 35em;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n</style>","import App from './App.svelte';\nimport { routes } from 'svelte-hash-router'\nimport { Home, Webcam, Brb } from './pages'\n\nroutes.set({\n  '/': Home,\n  '/webcam': Webcam,\n  '/brb': Brb, \n});\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","flushidx","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","init","options","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","factory","slice","P","UrlPattern","astNodeContainsSegmentsForProvidedParams","astNodeToNames","astNodeToRegexString","baseAstNodeToRegexString","concatMap","defaultOptions","escapeForRegex","getParam","keysAndValuesToObject","newParser","regexGroupCount","stringConcatMap","stringify","string","replace","array","f","results","concat","regex","RegExp","toString","exec","object","Result","Tagged","tag","parser","input","tagged","matches","sequence","parsers","arguments","call","pick","indexes","apply","lazy","cached","baseMany","end","stringResult","atLeastOneResultRequired","parserResult","many1","concatMany1Till","firstChoice","U","wildcard","wildcardChar","optional","optionalSegmentStartChar","pattern","optionalSegmentEndChar","segmentNameCharset","named","segmentNameStartChar","escapedChar","escapeChar","token","segmentValueCharset","astNode","params","nextIndexes","sideEffects","arg1","arg2","groupCount","parsed","isRegex","ast","names","TypeError","prototype","match","url","groups","exports","module","defineProp","prop","defineProperty","parse","schema","notRoot","pathname","href","$$component","$$redirect","route","test","v","$$pattern","freeze","routes","$","window","location","hash","querystring","path","addEventListener","removeEventListener","active","history","replaceState","dispatchEvent","Event","e","URLSearchParams","reduce","$r","$p","components","switch_value","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","spread_props","r","level","main","div5","div1","div","body"],"mappings":"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"}